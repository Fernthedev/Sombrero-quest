name: Publish QPM Package

on:
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true
      - name: Install Powershell
        run: sudo apt-get install -y powershell

      #       - name: Cache Android NDK
      #         id: cache-ndk
      #         uses: actions/cache@v2
      #         env:
      #           cache-name: cache-ndk
      #           ndkname: android-ndk-r22
      #         with:
      #           path: ndk
      #           key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.ndkname }}
      #           restore-keys: |
      #             ${{ runner.os }}-${{ env.cache-name }}-${{ env.ndkname }}

      - name: Get QPM
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: main.yml
          name: QPM-ubuntu-x64
          path: QPM
          repo: sc2ad/QuestPackageManager

      - name: QPM Make shared file
        run: |
          chmod +x ./QPM/QPM
          mkdir ./extern/codegen -p
          ./QPM/QPM dependency remove codegen
          ./QPM/QPM collect

      - name: QPM Dependencies Cache
        id: cache-qpm-deps
        uses: actions/cache@v2
        env:
          cache-name: cache-qpm-deps
        with:
          path: QPM_Temp
          key: cache-qpm-deps
          restore-keys: cache-qpm-deps

      - name: QPM Restore
        run: |
          chmod +x ./QPM/QPM
          ./QPM/QPM restore

      - name: Get Tag Version
        id: get_tag_version
        run: |
          echo ${GITHUB_REF#refs/tags/}
          echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
          echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: QPM Edit Version
        run: |
          ./QPM/QPM package edit version "${{ steps.get_tag_version.outputs.VERSION }}"

      # Commit the change to the package, .vscode/c_cpp_properties.json, and Android.mk
      - name: Configure commit
        run: |
          git config user.name "Github Actions"
          git config user.email "<>"
      - name: Commit Edit Version
        continue-on-error: true
        run: |
          git add ./Android.mk qpm.json
          git commit -m "Update Version and post restore"
      # Then, we want to use the commit we have just made, and force push our tag to that commit
      - name: Get Commit ID
        id: get_commit_id
        run: |
          echo `git rev-parse HEAD`
          echo ::set-output name=ID::`git rev-parse HEAD`
      - name: Force create tag
        run: |
          git tag --force ${{ steps.get_tag_version.outputs.TAG }} ${{ steps.get_commid_id.outputs.ID }}
      # Then, push, upload our artifacts, modify the config file to have soLink and debugSoLink
      - name: Create and push version specific branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git branch version-${{ steps.get_tag_version.outputs.TAG }}
          git push -u origin version-${{ steps.get_tag_version.outputs.TAG }} --force --tags
      # Get release that was created for this tag
      - name: Get Release
        uses: octokit/request-action@v2.x
        id: get_release
        with:
          route: GET /repos/:repository/releases/tags/${{ steps.get_tag_version.outputs.TAG }}
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Change QPM Package Info
        run: |
          ./QPM/QPM package edit-extra "branchName" "version-${{ steps.get_tag_version.outputs.TAG }}"
#          ./QPM/QPM package edit-extra "soLink" "${{ steps.upload_release_asset.outputs.browser_download_url }}"
#          ./QPM/QPM package edit-extra "debugSoLink" "${{ steps.upload_debug_asset.outputs.browser_download_url }}"
      - name: Commit Changed package info
        run: |
          git add qpm.json
          git commit -m "Updated qpm.json"

      # Then, we want to use the commit we have just made, and force push our tag to that commit
      - name: Get Commit ID
        id: get_created_commit_id
        run: |
          echo `git rev-parse HEAD`
          echo ::set-output name=ID::`git rev-parse HEAD`

      - name: Push New Commit and Tag
        run: |
          git push origin HEAD:version-${{ steps.get_tag_version.outputs.TAG }} --force
          git tag --force ${{ steps.get_tag_version.outputs.TAG }} ${{ steps.get_created_commit_id.outputs.ID }}
          git push --tags --force

          #     - name: Merge this branch into whatever branch we were originally built off of.
          #       TODO

      - name: QPM Publish
        run: ./QPM/QPM publish
